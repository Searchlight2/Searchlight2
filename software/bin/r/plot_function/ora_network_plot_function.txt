####---- ORA Gene Set Network Plot Function ----####

make_ora_network_plot <- function(edges,nodes,node_colours,node_outer_max_size,node_inner_max_size,node_label_size,edge_colour,edge_transparency, edge_width, label_nodes)
{
  set.seed(1)

  if (nrow(edges) > 0) {

    edges_source_target = edges[c(1,2)]

    net = 0
    net = network(edges_source_target, directed = FALSE)

    # gets the node sizes
    x = data.frame(node = network.vertex.names(net))
    x = merge(x, nodes, by = "node", sort = FALSE)$node_size
    net %v% "node_size" = as.numeric(x)

    # scales log10p from 0 to 1
    nodes$log10_p = -log(nodes$enrichment_p_value,10)
    nodes = nodes[order(nodes$log10_p),]
    nodes$log10_p_scaled_0_to_1 = range_0_to_1_function(nodes$log10_p)

    # pass node colours to the network
    colour_ramp_function = colorRamp(node_colours)
    colours = colour_ramp_function(nodes$log10_p_scaled_0_to_1)
    nodes$node_colour = rgb(colours, maxColorValue=256)
    x = data.frame(node = network.vertex.names(net))
    x = merge(x, nodes, by = "node", sort = FALSE)$node_colour
    net %v% "node_colour" = as.character(x)


    # make the plot
    if (label_nodes)
    {
      ggp = ggnet2(net, alpha = 1, color = 'node_colour', size = 0,edge.color = edge_colour, edge.size = edges$overlap_ratio*edge_width, edge.alpha = edge_transparency) +
        xlab("") +
        ylab("") +
        theme_SL2() +
        theme(legend.position="none") +
        geom_point(aes(color = color), size=(get.vertex.attribute(net,"node_size")*node_outer_max_size)/max(get.vertex.attribute(net,"node_size")), alpha = 0.5) +
        geom_point(aes(color = color), size=(get.vertex.attribute(net,"node_size")*node_inner_max_size)/max(get.vertex.attribute(net,"node_size")), alpha = 1) +
        geom_text(aes(label = network.vertex.names(net)), color = "black", size=node_label_size)
    }
    else
    {
      ggp = ggnet2(net, alpha = 1, color = 'node_colour', size = 0,edge.color = edge_colour, edge.size = edges$overlap_ratio*edge_width, edge.alpha = edge_transparency) +
        xlab("") +
        ylab("") +
        theme_SL2() +
        theme(legend.position="none") +
        geom_point(aes(color = color), size=(get.vertex.attribute(net,"node_size")*node_outer_max_size)/max(get.vertex.attribute(net,"node_size")), alpha = 0.5) +
        geom_point(aes(color = color), size=(get.vertex.attribute(net,"node_size")*node_inner_max_size)/max(get.vertex.attribute(net,"node_size")), alpha = 1)
    }
    return(ggp)
  }

  return(ggplot(data.frame()) + theme_SL2() + geom_blank() + ggtitle("There were too few significant nodes to plot this."))
}

